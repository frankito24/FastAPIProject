"""Init

Revision ID: a76775f6c1f7
Revises: 
Create Date: 2025-08-23 22:12:15.872523

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'a76775f6c1f7'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('education',
    sa.Column('id', sa.String(), autoincrement=False, nullable=False),
    sa.Column('clave', sa.String(), nullable=True),
    sa.Column('address', sa.String(), nullable=True),
    sa.Column('id_municipality', sa.String(), nullable=True),
    sa.Column('name_short', sa.String(), nullable=True),
    sa.Column('utm_x', sa.String(), nullable=True),
    sa.Column('utm_y', sa.String(), nullable=True),
    sa.Column('name_large', sa.String(), nullable=True),
    sa.Column('description_short', sa.String(), nullable=True),
    sa.Column('description_large', sa.String(), nullable=True),
    sa.Column('tag', sa.String(), nullable=True),
    sa.Column('url', sa.String(), nullable=True),
    sa.Column('municipality_name', sa.String(), nullable=True),
    sa.Column('id_vial', sa.String(), nullable=True),
    sa.Column('latitude', sa.String(), nullable=True),
    sa.Column('longitude', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('education_admition',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('id_education', sa.String(), nullable=True),
    sa.Column('cycle', sa.String(), nullable=True),
    sa.Column('type_solicitude', sa.String(), nullable=True),
    sa.Column('year', sa.String(), nullable=True),
    sa.Column('total', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('education_enrollment',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('id_education', sa.String(), nullable=True),
    sa.Column('cycle', sa.String(), nullable=True),
    sa.Column('year', sa.String(), nullable=True),
    sa.Column('total', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('education_municipality',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('id_municipality', sa.String(), nullable=True),
    sa.Column('id_education', sa.String(), nullable=True),
    sa.Column('id_municipality_original', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('hospital',
    sa.Column('id', sa.String(), autoincrement=False, nullable=False),
    sa.Column('name_large', sa.String(), nullable=True),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('id_municipality', sa.String(), nullable=True),
    sa.Column('utm_x', sa.String(), nullable=True),
    sa.Column('utm_y', sa.String(), nullable=True),
    sa.Column('tag', sa.String(), nullable=True),
    sa.Column('address', sa.String(), nullable=True),
    sa.Column('url', sa.String(), nullable=True),
    sa.Column('id_via', sa.String(), nullable=True),
    sa.Column('name_municipality', sa.String(), nullable=True),
    sa.Column('latitude', sa.String(), nullable=True),
    sa.Column('longitude', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('hospital_activity',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('hospital_name', sa.String(), nullable=True),
    sa.Column('year', sa.String(), nullable=True),
    sa.Column('type_activity', sa.String(), nullable=True),
    sa.Column('total', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('hospital_municipality',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('hospital_name', sa.String(), nullable=True),
    sa.Column('municipality_name', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('hospital_resources',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('hospital_name', sa.String(), nullable=True),
    sa.Column('year', sa.String(), nullable=True),
    sa.Column('type_resources', sa.String(), nullable=True),
    sa.Column('total', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('municipality',
    sa.Column('id', sa.String(), autoincrement=False, nullable=False),
    sa.Column('id_secondary', sa.String(), nullable=True),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('tag', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('municipality_demographics',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('id_secondary_municipality', sa.String(), nullable=True),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('total', sa.String(), nullable=True),
    sa.Column('year', sa.String(), nullable=True),
    sa.Column('range', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.execute("CREATE EXTENSION IF NOT EXISTS unaccent;")
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('municipality_demographics')
    op.drop_table('municipality')
    op.drop_table('hospital_resources')
    op.drop_table('hospital_municipality')
    op.drop_table('hospital_activity')
    op.drop_table('hospital')
    op.drop_table('education_municipality')
    op.drop_table('education_enrollment')
    op.drop_table('education_admition')
    op.drop_table('education')
    op.execute("DROP EXTENSION IF EXISTS unaccent;")
    # ### end Alembic commands ###
