"""add_analysis_models

Revision ID: 400fb3b16551
Revises: 1a27b0c5da3b
Create Date: 2025-09-01 01:20:54.266431

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '400fb3b16551'
down_revision: Union[str, Sequence[str], None] = '1a27b0c5da3b'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('education_center_analysis',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('education_center_id', sa.String(), nullable=True),
    sa.Column('analysis_year', sa.String(), nullable=True),
    sa.Column('center_name', sa.String(), nullable=True),
    sa.Column('center_type', sa.String(), nullable=True),
    sa.Column('cycles_active', sa.String(), nullable=True),
    sa.Column('total_estimated_places', sa.String(), nullable=True),
    sa.Column('total_enrolled', sa.String(), nullable=True),
    sa.Column('total_max_enrolled', sa.String(), nullable=True),
    sa.Column('total_applications_submitted', sa.String(), nullable=True),
    sa.Column('total_applications_admitted', sa.String(), nullable=True),
    sa.Column('total_applications_admitted_real', sa.String(), nullable=True),
    sa.Column('center_occupancy_rate', sa.String(), nullable=True),
    sa.Column('center_demand_ratio', sa.String(), nullable=True),
    sa.Column('center_admission_capacity_ratio', sa.String(), nullable=True),
    sa.Column('center_admission_efficiency', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('education_cycle_metrics',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('education_center_id', sa.String(), nullable=True),
    sa.Column('cycle', sa.String(), nullable=True),
    sa.Column('analysis_year', sa.String(), nullable=True),
    sa.Column('infant_transitions', sa.String(), nullable=True),
    sa.Column('max_infant_ii_places', sa.String(), nullable=True),
    sa.Column('max_enrolled', sa.String(), nullable=True),
    sa.Column('max_admitted', sa.String(), nullable=True),
    sa.Column('max_total_students', sa.String(), nullable=True),
    sa.Column('max_year', sa.String(), nullable=True),
    sa.Column('target_year_enrolled', sa.String(), nullable=True),
    sa.Column('estimated_places', sa.String(), nullable=True),
    sa.Column('applications_submitted', sa.String(), nullable=True),
    sa.Column('applications_admitted', sa.String(), nullable=True),
    sa.Column('applications_admitted_corrected', sa.String(), nullable=True),
    sa.Column('occupancy_rate', sa.String(), nullable=True),
    sa.Column('demand_ratio', sa.String(), nullable=True),
    sa.Column('admission_capacity_ratio', sa.String(), nullable=True),
    sa.Column('admission_efficiency', sa.String(), nullable=True),
    sa.Column('is_active', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('hospital_analysis',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('hospital_id', sa.String(), nullable=True),
    sa.Column('analysis_year', sa.String(), nullable=True),
    sa.Column('hospital_name', sa.String(), nullable=True),
    sa.Column('camas_instaladas', sa.String(), nullable=True),
    sa.Column('estancia_media_global', sa.String(), nullable=True),
    sa.Column('ingresos_programados', sa.String(), nullable=True),
    sa.Column('ingresos_urgentes', sa.String(), nullable=True),
    sa.Column('total_ingresos', sa.String(), nullable=True),
    sa.Column('urgencias_totales', sa.String(), nullable=True),
    sa.Column('dias_hospitalizacion', sa.String(), nullable=True),
    sa.Column('capacidad_anual_camas', sa.String(), nullable=True),
    sa.Column('tasa_ocupacion_camas', sa.String(), nullable=True),
    sa.Column('tasa_ingreso_urgencias', sa.String(), nullable=True),
    sa.Column('total_ingresos_calculado', sa.String(), nullable=True),
    sa.Column('ratio_urgentes_programados', sa.String(), nullable=True),
    sa.Column('productividad_camas', sa.String(), nullable=True),
    sa.Column('eficiencia_estancia', sa.String(), nullable=True),
    sa.Column('tasa_ocupacion_camas_percentile', sa.String(), nullable=True),
    sa.Column('tasa_ocupacion_camas_score', sa.String(), nullable=True),
    sa.Column('tasa_ingreso_urgencias_percentile', sa.String(), nullable=True),
    sa.Column('tasa_ingreso_urgencias_score', sa.String(), nullable=True),
    sa.Column('ratio_urgentes_programados_percentile', sa.String(), nullable=True),
    sa.Column('ratio_urgentes_programados_score', sa.String(), nullable=True),
    sa.Column('productividad_camas_percentile', sa.String(), nullable=True),
    sa.Column('productividad_camas_score', sa.String(), nullable=True),
    sa.Column('eficiencia_estancia_percentile', sa.String(), nullable=True),
    sa.Column('eficiencia_estancia_score', sa.String(), nullable=True),
    sa.Column('nivel_servicio_score', sa.String(), nullable=True),
    sa.Column('camas_por_1000_hab', sa.String(), nullable=True),
    sa.Column('ingresos_por_1000_hab', sa.String(), nullable=True),
    sa.Column('urgencias_por_1000_hab', sa.String(), nullable=True),
    sa.Column('poblacion_total_asignada', sa.String(), nullable=True),
    sa.Column('num_municipios_asignados', sa.String(), nullable=True),
    sa.Column('camas_por_1000_asignados', sa.String(), nullable=True),
    sa.Column('preparacion_camas', sa.String(), nullable=True),
    sa.Column('capacidad_atencion_por_1000_asignados', sa.String(), nullable=True),
    sa.Column('urgencias_por_1000_asignados', sa.String(), nullable=True),
    sa.Column('camas_por_1000_asignados_percentile', sa.String(), nullable=True),
    sa.Column('capacidad_atencion_por_1000_asignados_percentile', sa.String(), nullable=True),
    sa.Column('urgencias_por_1000_asignados_percentile', sa.String(), nullable=True),
    sa.Column('indice_preparacion_poblacional', sa.String(), nullable=True),
    sa.Column('municipios_servidos', sa.String(), nullable=True),
    sa.Column('municipios_id_servidos', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('municipality_cycle_metrics',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('municipality_id', sa.String(), nullable=True),
    sa.Column('cycle', sa.String(), nullable=True),
    sa.Column('analysis_year', sa.String(), nullable=True),
    sa.Column('capacity', sa.String(), nullable=True),
    sa.Column('estimated_places', sa.String(), nullable=True),
    sa.Column('max_enrolled', sa.String(), nullable=True),
    sa.Column('applications', sa.String(), nullable=True),
    sa.Column('admitted', sa.String(), nullable=True),
    sa.Column('num_centers', sa.String(), nullable=True),
    sa.Column('centers_names', sa.String(), nullable=True),
    sa.Column('estimated_need', sa.String(), nullable=True),
    sa.Column('coverage_ratio', sa.String(), nullable=True),
    sa.Column('is_covered', sa.String(), nullable=True),
    sa.Column('deficit', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('municipality_education_coverage',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('municipality_id', sa.String(), nullable=True),
    sa.Column('analysis_year', sa.String(), nullable=True),
    sa.Column('municipality_name', sa.String(), nullable=True),
    sa.Column('total_centers', sa.String(), nullable=True),
    sa.Column('total_population_0_19', sa.String(), nullable=True),
    sa.Column('population_0_4', sa.String(), nullable=True),
    sa.Column('population_5_9', sa.String(), nullable=True),
    sa.Column('population_10_14', sa.String(), nullable=True),
    sa.Column('population_15_19', sa.String(), nullable=True),
    sa.Column('total_estimated_need', sa.String(), nullable=True),
    sa.Column('total_capacity', sa.String(), nullable=True),
    sa.Column('overall_coverage_ratio', sa.String(), nullable=True),
    sa.Column('cycles_with_need', sa.String(), nullable=True),
    sa.Column('cycles_covered', sa.String(), nullable=True),
    sa.Column('coverage_percentage', sa.String(), nullable=True),
    sa.Column('is_fully_covered', sa.String(), nullable=True),
    sa.Column('total_deficit', sa.String(), nullable=True),
    sa.Column('cycles_with_access', sa.String(), nullable=True),
    sa.Column('access_percentage', sa.String(), nullable=True),
    sa.Column('access_classification', sa.String(), nullable=True),
    sa.Column('has_basic_education', sa.String(), nullable=True),
    sa.Column('has_mandatory_education', sa.String(), nullable=True),
    sa.Column('missing_cycles', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('municipality_education_coverage')
    op.drop_table('municipality_cycle_metrics')
    op.drop_table('hospital_analysis')
    op.drop_table('education_cycle_metrics')
    op.drop_table('education_center_analysis')
    # ### end Alembic commands ###
